- name: Test that we have an ACI MultiSite host, username and password
  fail:
    msg: 'Please define the following variables: mso_hostname, mso_username and mso_password.'
  when: mso_hostname is not defined or mso_username is not defined or mso_password
    is not defined
- name: Remove site 2
  mso_site: &id006
    host: '{{ mso_hostname }}'
    username: '{{ mso_username }}'
    password: '{{ mso_password }}'
    validate_certs: '{{ mso_validate_certs | default(false) }}'
    use_ssl: '{{ mso_use_ssl | default(true) }}'
    use_proxy: '{{ mso_use_proxy | default(true) }}'
    output_level: '{{ mso_output_level | default("info") }}'
    site: '{{ mso_site | default("ansible_test") }}_2'
    state: absent
- name: Remove site
  mso_site:
    host: '{{ mso_hostname }}'
    username: '{{ mso_username }}'
    password: '{{ mso_password }}'
    validate_certs: '{{ mso_validate_certs | default(false) }}'
    use_ssl: '{{ mso_use_ssl | default(true) }}'
    use_proxy: '{{ mso_use_proxy | default(true) }}'
    output_level: '{{ mso_output_level | default("info") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    state: absent
  register: cm_remove_site
- name: Add site (check_mode)
  mso_site: &id001
    host: '{{ mso_hostname }}'
    username: '{{ mso_username }}'
    password: '{{ mso_password }}'
    validate_certs: '{{ mso_validate_certs | default(false) }}'
    use_ssl: '{{ mso_use_ssl | default(true) }}'
    use_proxy: '{{ mso_use_proxy | default(true) }}'
    output_level: '{{ mso_output_level | default("info") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    apic_username: admin
    apic_password: '{{ apic_password }}'
    apic_site_id: 101
    urls: &id002
    - https://{{ apic_hostname }}
    location: &id003
      latitude: 50.887318
      longitude: 4.447084
    labels: &id004
    - Diegem
    - EMEA
    - POD51
    state: present
  check_mode: true
  register: cm_add_site
- name: Verify cm_add_site
  assert:
    that:
    - cm_add_site is changed
    - cm_add_site.previous == {}
    - cm_add_site.current.id is not defined
    - cm_add_site.current.name == mso_site|default("ansible_test")
- name: Add site (normal mode)
  mso_site: *id001
  register: nm_add_site
- name: nm_Verify add_site
  assert:
    that:
    - nm_add_site is changed
    - nm_add_site.previous == {}
    - nm_add_site.current.id is defined
    - nm_add_site.current.name == mso_site|default("ansible_test")
- name: Add site again (check_mode)
  mso_site: *id001
  check_mode: true
  register: cm_add_site_again
- name: Verify cm_add_site_again
  assert:
    that:
    - cm_add_site_again is not changed
    - cm_add_site_again.previous.name == mso_site|default("ansible_test")
    - cm_add_site_again.current.id == nm_add_site.current.id
    - cm_add_site_again.current.name == mso_site|default("ansible_test")
- name: Add site again (normal mode)
  mso_site: *id001
  register: nm_add_site_again
- name: Verify nm_add_site_again
  assert:
    that:
    - nm_add_site_again is not changed
    - nm_add_site_again.previous.name == mso_site|default("ansible_test")
    - nm_add_site_again.current.id == nm_add_site.current.id
    - nm_add_site_again.current.name == mso_site|default("ansible_test")
- name: Change site (check_mode)
  mso_site:
    host: '{{ mso_hostname }}'
    username: '{{ mso_username }}'
    password: '{{ mso_password }}'
    validate_certs: '{{ mso_validate_certs | default(false) }}'
    use_ssl: '{{ mso_use_ssl | default(true) }}'
    use_proxy: '{{ mso_use_proxy | default(true) }}'
    output_level: '{{ mso_output_level | default("info") }}'
    site: '{{ mso_site | default("ansible_test") }}_2'
    apic_username: admin
    apic_password: '{{ apic_password }}'
    apic_site_id: 101
    urls: *id002
    location: *id003
    labels: *id004
    state: present
    site_id: '{{ nm_add_site.current.id }}'
  check_mode: true
  register: cm_change_site
- name: Verify cm_change_site
  assert:
    that:
    - cm_change_site is changed
    - cm_change_site.current.id == nm_add_site.current.id
    - cm_change_site.current.name == '{{ mso_site | default("ansible_test") }}_2'
- name: Change site (normal mode)
  mso_site:
    host: '{{ mso_hostname }}'
    username: '{{ mso_username }}'
    password: '{{ mso_password }}'
    validate_certs: '{{ mso_validate_certs | default(false) }}'
    use_ssl: '{{ mso_use_ssl | default(true) }}'
    use_proxy: '{{ mso_use_proxy | default(true) }}'
    output_level: debug
    site: '{{ mso_site | default("ansible_test") }}_2'
    apic_username: admin
    apic_password: '{{ apic_password }}'
    apic_site_id: 101
    urls: *id002
    location: *id003
    labels: *id004
    state: present
    site_id: '{{ nm_add_site.current.id }}'
  register: nm_change_site
- name: Verify nm_change_site
  assert:
    that:
    - nm_change_site is changed
    - nm_change_site.current.id == nm_add_site.current.id
    - nm_change_site.current.name == '{{ mso_site | default("ansible_test") }}_2'
- name: Change site again (check_mode)
  mso_site:
    host: '{{ mso_hostname }}'
    username: '{{ mso_username }}'
    password: '{{ mso_password }}'
    validate_certs: '{{ mso_validate_certs | default(false) }}'
    use_ssl: '{{ mso_use_ssl | default(true) }}'
    use_proxy: '{{ mso_use_proxy | default(true) }}'
    output_level: '{{ mso_output_level | default("info") }}'
    site: '{{ mso_site | default("ansible_test") }}_2'
    apic_username: admin
    apic_password: '{{ apic_password }}'
    apic_site_id: 101
    urls: *id002
    location: *id003
    labels: *id004
    state: present
    site_id: '{{ nm_add_site.current.id }}'
  check_mode: true
  register: cm_change_site_again
- name: Verify cm_change_site_again
  assert:
    that:
    - cm_change_site_again is not changed
    - cm_change_site_again.current.id == nm_add_site.current.id
    - cm_change_site_again.current.name == '{{ mso_site | default("ansible_test")
      }}_2'
- name: Change site again (normal mode)
  mso_site:
    host: '{{ mso_hostname }}'
    username: '{{ mso_username }}'
    password: '{{ mso_password }}'
    validate_certs: '{{ mso_validate_certs | default(false) }}'
    use_ssl: '{{ mso_use_ssl | default(true) }}'
    use_proxy: '{{ mso_use_proxy | default(true) }}'
    output_level: '{{ mso_output_level | default("info") }}'
    site: '{{ mso_site | default("ansible_test") }}_2'
    apic_username: admin
    apic_password: '{{ apic_password }}'
    apic_site_id: 101
    urls: *id002
    location: *id003
    labels: *id004
    state: present
    site_id: '{{ nm_add_site.current.id }}'
  register: nm_change_site_again
- name: Verify nm_change_site_again
  assert:
    that:
    - nm_change_site_again is not changed
    - nm_change_site_again.current.id == nm_add_site.current.id
    - nm_change_site_again.current.name == '{{ mso_site | default("ansible_test")
      }}_2'
- name: Query all sites (check_mode)
  mso_site: &id005
    host: '{{ mso_hostname }}'
    username: '{{ mso_username }}'
    password: '{{ mso_password }}'
    validate_certs: '{{ mso_validate_certs | default(false) }}'
    use_ssl: '{{ mso_use_ssl | default(true) }}'
    use_proxy: '{{ mso_use_proxy | default(true) }}'
    output_level: '{{ mso_output_level | default("info") }}'
    state: query
  check_mode: true
  register: cm_query_all_sites
- name: Query all sites (normal mode)
  mso_site: *id005
  register: nm_query_all_sites
- name: Verify query_all_sites
  assert:
    that:
    - cm_query_all_sites is not changed
    - nm_query_all_sites is not changed
- name: Query our site
  mso_site:
    host: '{{ mso_hostname }}'
    username: '{{ mso_username }}'
    password: '{{ mso_password }}'
    validate_certs: '{{ mso_validate_certs | default(false) }}'
    use_ssl: '{{ mso_use_ssl | default(true) }}'
    use_proxy: '{{ mso_use_proxy | default(true) }}'
    output_level: '{{ mso_output_level | default("info") }}'
    state: query
    site: '{{ mso_site | default("ansible_test") }}_2'
  check_mode: true
  register: cm_query_site
- name: Query our site
  mso_site:
    host: '{{ mso_hostname }}'
    username: '{{ mso_username }}'
    password: '{{ mso_password }}'
    validate_certs: '{{ mso_validate_certs | default(false) }}'
    use_ssl: '{{ mso_use_ssl | default(true) }}'
    use_proxy: '{{ mso_use_proxy | default(true) }}'
    output_level: '{{ mso_output_level | default("info") }}'
    state: query
    site: '{{ mso_site | default("ansible_test") }}_2'
  register: nm_query_site
- name: Verify query_site
  assert:
    that:
    - cm_query_site is not changed
    - cm_query_site.current.id == nm_add_site.current.id
    - cm_query_site.current.name == '{{ mso_site | default("ansible_test") }}_2'
    - nm_query_site is not changed
    - nm_query_site.current.id == nm_add_site.current.id
    - nm_query_site.current.name == '{{ mso_site | default("ansible_test") }}_2'
    - cm_query_site == nm_query_site
- name: Remove site (check_mode)
  mso_site: *id006
  check_mode: true
  register: cm_remove_site
- name: Verify cm_remove_site
  assert:
    that:
    - cm_remove_site is changed
    - cm_remove_site.current == {}
- name: Remove site (normal mode)
  mso_site: *id006
  register: nm_remove_site
- name: Verify nm_remove_site
  assert:
    that:
    - nm_remove_site is changed
    - nm_remove_site.current == {}
- name: Remove site again (check_mode)
  mso_site: *id006
  check_mode: true
  register: cm_remove_site_again
- name: Verify cm_remove_site_again
  assert:
    that:
    - cm_remove_site_again is not changed
    - cm_remove_site_again.current == {}
- name: Remove site again (normal mode)
  mso_site: *id006
  register: nm_remove_site_again
- name: Verify nm_remove_site_again
  assert:
    that:
    - nm_remove_site_again is not changed
    - nm_remove_site_again.current == {}
- name: Query non-existing site (check_mode)
  mso_site:
    host: '{{ mso_hostname }}'
    username: '{{ mso_username }}'
    password: '{{ mso_password }}'
    validate_certs: '{{ mso_validate_certs | default(false) }}'
    use_ssl: '{{ mso_use_ssl | default(true) }}'
    use_proxy: '{{ mso_use_proxy | default(true) }}'
    output_level: '{{ mso_output_level | default("info") }}'
    state: query
    site: '{{ mso_site | default("ansible_test") }}'
  check_mode: true
  register: cm_query_non_site
- name: Query non-existing site (normal mode)
  mso_site:
    host: '{{ mso_hostname }}'
    username: '{{ mso_username }}'
    password: '{{ mso_password }}'
    validate_certs: '{{ mso_validate_certs | default(false) }}'
    use_ssl: '{{ mso_use_ssl | default(true) }}'
    use_proxy: '{{ mso_use_proxy | default(true) }}'
    output_level: '{{ mso_output_level | default("info") }}'
    state: query
    site: '{{ mso_site | default("ansible_test") }}'
  register: nm_query_non_site
- name: Verify query_non_site
  assert:
    that:
    - cm_query_non_site is not changed
    - nm_query_non_site is not changed
    - cm_query_non_site == nm_query_non_site
