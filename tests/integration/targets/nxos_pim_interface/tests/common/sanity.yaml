- debug: msg="START connection={{ ansible_connection }} nxos_pim_interface sanity
    test"
- name: 'Setup: Disable features'
  nxos_feature: &id011
    feature: '{{ item }}'
    state: disabled
  loop:
  - pim
  - bfd
  ignore_errors: true
- name: 'Setup: Enable features'
  nxos_feature:
    feature: '{{ item }}'
    state: enabled
  loop:
  - pim
  - bfd
- set_fact: testint="{{ nxos_int1 }}"
- name: 'Setup: Put interface {{ testint }} into a default state'
  nxos_config:
    lines:
    - default interface {{ testint }}
  ignore_errors: true
- name: Ensure {{testint}} is layer3
  nxos_interface:
    interface: '{{ testint }}'
    mode: layer3
    description: Configured by Ansible - Layer3
    admin_state: up
    state: present
- block:
  - name: Configure nxos_pim_interface state absent
    nxos_pim_interface: &id010
      interface: '{{ testint }}'
      state: absent
  - name: configure jp policy and type
    nxos_pim_interface: &id001
      interface: '{{ testint }}'
      jp_policy_in: JPIN
      jp_policy_out: JPOUT
      jp_type_in: routemap
      jp_type_out: routemap
      sparse: true
      border: true
    register: result
  - assert: &id002
      that:
      - result.changed == true
  - name: Check idempotence
    nxos_pim_interface: *id001
    register: result
  - assert: &id004
      that:
      - result.changed == false
  - name: configure neighbor policy and rm
    nxos_pim_interface: &id003
      interface: '{{ testint }}'
      neighbor_policy: NPR
      neighbor_type: routemap
    register: result
  - assert: *id002
  - name: Check idempotence
    nxos_pim_interface: *id003
    register: result
  - assert: *id004
  - pause:
      seconds: 5
  - name: configure neighbor policy and prefix
    nxos_pim_interface: &id005
      interface: '{{ testint }}'
      neighbor_policy: NPPF
      neighbor_type: prefix
    register: result
  - assert: *id002
  - name: Check idempotence
    nxos_pim_interface: *id005
    register: result
  - assert: *id004
  - name: configure hello_auth_key
    nxos_pim_interface:
      interface: '{{ testint }}'
      hello_auth_key: password1
    register: result
  - assert: *id002
  - name: configure pim other params
    nxos_pim_interface: &id006
      interface: '{{ testint }}'
      dr_prio: 10
      hello_interval: 40
      sparse: true
      border: true
      bfd: enable
      state: present
    register: result
  - assert: *id002
  - name: Check idempotence
    nxos_pim_interface: *id006
    register: result
  - assert: *id004
  - name: configure negative
    nxos_pim_interface: &id007
      interface: '{{ testint }}'
      sparse: false
      border: false
      bfd: disable
      state: present
    register: result
  - assert: *id002
  - name: Check idempotence
    nxos_pim_interface: *id007
    register: result
  - assert: *id004
  - pause:
      seconds: 5
  - name: configure state default
    nxos_pim_interface: &id008
      interface: '{{ testint }}'
      state: default
    register: result
  - assert: *id002
  - name: Check idempotence
    nxos_pim_interface: *id008
    register: result
  - assert: *id004
  - name: configure border
    nxos_pim_interface: &id009
      interface: '{{ testint }}'
      border: true
      state: present
    register: result
  - assert: *id002
  - name: Check idempotence
    nxos_pim_interface: *id009
    register: result
  - assert: *id004
  - name: configure state absent
    nxos_pim_interface: *id010
    register: result
  - assert: *id002
  - name: Check idempotence
    nxos_pim_interface: *id010
    register: result
  - assert: *id004
  always:
  - name: Disable feature PIM
    nxos_feature: *id011
    loop:
    - pim
    - bfd
- debug: msg="END connection={{ ansible_connection }} nxos_pim_interface sanity test"
