- block:
  - name: set up aws connection info
    set_fact:
      aws_connection_info:
        aws_access_key: '{{ aws_access_key }}'
        aws_secret_key: '{{ aws_secret_key }}'
        security_token: '{{ security_token }}'
        region: '{{ aws_region }}'
    no_log: true
  - name: Ensure the resource doesn't exist
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
    register: result
  - assert:
      that:
      - not result.changed
    ignore_errors: true
  - name: Check Mode - Create a mariadb instance
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
    register: result
    check_mode: true
  - assert:
      that:
      - result.changed
  - name: Create a mariadb instance
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
    register: result
  - assert:
      that:
      - result.changed
      - result.db_instance_identifier == '{{ instance_id }}'
  - name: Idempotence
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
    register: result
  - assert:
      that:
      - not result.changed
      - result.db_instance_identifier
  - name: Idempotence with minimal options
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: present
    register: result
  - assert:
      that:
      - not result.changed
      - result.db_instance_identifier
  - name: Check Mode - stop the instance
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: stopped
    register: result
    check_mode: true
  - assert:
      that:
      - result.changed
  - name: Stop the instance
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: stopped
    register: result
  - assert:
      that:
      - result.changed
  - name: Check Mode - idempotence
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: stopped
    register: result
    check_mode: true
  - assert:
      that:
      - not result.changed
  - name: Idempotence
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: stopped
    register: result
  - assert:
      that:
      - not result.changed
  - name: Check mode - reboot a stopped instance
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: rebooted
    register: result
    check_mode: true
  - assert:
      that:
      - result.changed
  - name: Reboot a stopped instance
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: rebooted
    register: result
  - assert:
      that:
      - result.changed
  - name: Check Mode - start the instance
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: started
    register: result
    check_mode: true
  - assert:
      that:
      - not result.changed
  - name: Stop the instance
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: stopped
  - name: Start the instance
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: started
    register: result
  - assert:
      that:
      - result.changed
  - name: take a snapshot
    rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-snapshot'
      state: present
      wait: true
  - name: take a snapshot - idempotence
    rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-snapshot'
      state: present
    register: result
  - assert:
      that:
      - not result.changed
  - name: check snapshot is ok
    rds_snapshot_info:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-snapshot'
    register: result
  - assert:
      that:
      - (result.snapshots | length) == 1
  - name: remove a snapshot without wait
    rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-snapshot'
      state: absent
    register: result
  - assert:
      that:
      - result.changed
  - name: remove a snapshot without wait - idempotence
    rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-snapshot'
      state: absent
      wait: true
    register: result
  - assert:
      that:
      - not result.changed
  - name: remove a snapshot with wait - idempotence
    rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-snapshot'
      state: absent
      wait: true
    register: result
  - assert:
      that:
      - not result.changed
  - name: check snapshot is removed
    rds_snapshot_info:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-snapshot'
    register: result
  - assert:
      that:
      - not result.snapshots
  always:
  - name: remove snapshot
    rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-snapshot'
      state: absent
      wait: true
    ignore_errors: true
  - name: Remove DB instance
    rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
    ignore_errors: true
