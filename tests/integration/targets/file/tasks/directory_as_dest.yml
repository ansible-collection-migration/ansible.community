- name: Initialize the test output dir
  include: initialize.yml
- name: create a test sub-directory
  file:
    dest: '{{output_dir}}/sub1'
    state: directory
- name: create a file for linking to
  copy:
    dest: '{{output_dir}}/file_to_link'
    content: Hello World
- name: Try to create a file with directory as dest
  file:
    dest: '{{output_dir}}/sub1'
    state: file
    force: false
  ignore_errors: true
  register: file1_result
- name: Get stat info to show the directory has not been changed to a file
  stat:
    path: '{{ output_dir }}/sub1'
    follow: false
  register: file1_dir_stat
- name: verify that the directory was not overwritten
  assert:
    that:
    - file1_result is failed
    - file1_dir_stat["stat"].isdir
- name: Try to create a symlink with directory as dest
  file:
    src: '{{ output_dir }}/file_to_link'
    dest: '{{output_dir}}/sub1'
    state: link
    force: false
  ignore_errors: true
  register: file2_result
- name: Get stat info to show the directory has not been changed to a file
  stat:
    path: '{{ output_dir }}/sub1'
    follow: false
  register: file2_dir_stat
- name: verify that the directory was not overwritten
  assert:
    that:
    - file2_result is failed
    - file2_dir_stat["stat"].isdir
- copy:
    content: test
    dest: '{{ output_dir }}/sub1/passwd'
- name: Try to create a file with directory as dest
  file:
    dest: '{{output_dir}}/sub1'
    state: file
    force: true
  ignore_errors: true
  register: file3_result
- name: Get stat info to show the directory has not been changed to a file
  stat:
    path: '{{ output_dir }}/sub1'
    follow: false
  register: file3_dir_stat
- name: verify that the directory was not overwritten
  assert:
    that:
    - file3_result is failed
    - file3_dir_stat["stat"].isdir
- name: Try to create a symlink with directory as dest
  file:
    src: '{{ output_dir }}/file_to_link'
    dest: '{{output_dir}}/sub1'
    state: link
    force: true
  ignore_errors: true
  register: file4_result
- name: Get stat info to show the directory has not been changed to a file
  stat:
    path: '{{ output_dir }}/sub1'
    follow: false
  register: file4_dir_stat
- name: verify that the directory was not overwritten
  assert:
    that:
    - file4_result is failed
    - file4_dir_stat["stat"].isdir
- name: Cleanup the file that made the directory nonempty
  file:
    state: absent
    dest: '{{ output_dir }}/sub1/passwd'
- name: Try to create a file with directory as dest
  file:
    dest: '{{output_dir}}/sub1'
    state: file
    force: true
  ignore_errors: true
  register: file5_result
- name: Get stat info to show the directory has not been changed to a file
  stat:
    path: '{{ output_dir }}/sub1'
    follow: false
  register: file5_dir_stat
- name: verify that the directory was not overwritten
  assert:
    that:
    - file5_result is failed
    - file5_dir_stat["stat"].isdir
- name: Try to create a symlink with directory as dest
  file:
    src: '{{ output_dir }}/file_to_link'
    dest: '{{output_dir}}/sub1'
    state: link
    force: true
  register: file6_result
- name: Get stat info to show the directory has been overwritten
  stat:
    path: '{{ output_dir }}/sub1'
    follow: false
  register: file6_dir_stat
- name: verify that the directory was overwritten
  assert:
    that:
    - file6_result is changed
    - not file6_dir_stat["stat"].isdir
    - file6_dir_stat["stat"].islnk
- name: Cleanup the test subdirectory
  file:
    dest: '{{output_dir}}/sub1'
    state: absent
- name: Re-create the test sub-directory
  file:
    dest: '{{output_dir}}/sub1'
    state: directory
- name: Try to create a hardlink with directory as dest
  file:
    src: '{{ output_dir }}/file_to_link'
    dest: '{{ output_dir }}/sub1'
    state: hard
    force: false
  ignore_errors: true
  register: file7_result
- name: Get stat info to show the directory has not been changed to a file
  stat:
    path: '{{ output_dir }}/sub1'
    follow: false
  register: file7_dir_stat
- name: Get stat info to show the link has been created
  stat:
    path: '{{ output_dir }}/sub1/file_to_link'
    follow: false
  register: file7_link_stat
- debug:
    var: file7_link_stat
- name: verify that the directory was not overwritten
  assert:
    that:
    - file7_result is changed
    - file7_dir_stat["stat"].isdir
    - file7_link_stat["stat"].isfile
    - file7_link_stat["stat"].isfile
  ignore_errors: true
- name: Get initial stat info to compare with later
  stat:
    path: '{{ output_dir }}/sub1'
    follow: false
  register: file8_initial_dir_stat
- name: Use touch with directory as dest
  file:
    dest: '{{output_dir}}/sub1'
    state: touch
    force: false
  register: file8_result
- name: Get stat info to show the directory has not been changed to a file
  stat:
    path: '{{ output_dir }}/sub1'
    follow: false
  register: file8_dir_stat
- name: verify that the directory has been updated
  assert:
    that:
    - file8_result is changed
    - file8_dir_stat["stat"].isdir
    - file8_dir_stat["stat"]["mtime"] != file8_initial_dir_stat["stat"]["mtime"]
- name: Get initial stat info to compare with later
  stat:
    path: '{{ output_dir }}/sub1'
    follow: false
  register: file11_initial_dir_stat
- name: Use touch with directory as dest and keep mtime and atime
  file:
    dest: '{{output_dir}}/sub1'
    state: touch
    force: false
    modification_time: preserve
    access_time: preserve
  register: file11_result
- name: Get stat info to show the directory has not been changed
  stat:
    path: '{{ output_dir }}/sub1'
    follow: false
  register: file11_dir_stat
- name: verify that the directory has not been updated
  assert:
    that:
    - file11_result is not changed
    - file11_dir_stat["stat"].isdir
    - file11_dir_stat["stat"]["mtime"] == file11_initial_dir_stat["stat"]["mtime"]
    - file11_dir_stat["stat"]["atime"] == file11_initial_dir_stat["stat"]["atime"]
- name: Get initial stat info to compare with later
  stat:
    path: '{{ output_dir }}/sub1'
    follow: false
  register: file9_initial_dir_stat
- name: Use directory with directory as dest
  file:
    dest: '{{output_dir}}/sub1'
    state: directory
    force: false
  register: file9_result
- name: Get stat info to show the directory has not been changed
  stat:
    path: '{{ output_dir }}/sub1'
    follow: false
  register: file9_dir_stat
- name: verify that the directory has been updated
  assert:
    that:
    - file9_result is not changed
    - file9_dir_stat["stat"].isdir
    - file9_dir_stat["stat"]["mtime"] == file9_initial_dir_stat["stat"]["mtime"]
- name: Use directory with directory as dest and force=True
  file:
    dest: '{{output_dir}}/sub1'
    state: directory
    force: true
  register: file10_result
- name: Get stat info to show the directory has not been changed
  stat:
    path: '{{ output_dir }}/sub1'
    follow: false
  register: file10_dir_stat
- name: verify that the directory has been updated
  assert:
    that:
    - file10_result is not changed
    - file10_dir_stat["stat"].isdir
    - file10_dir_stat["stat"]["mtime"] == file9_initial_dir_stat["stat"]["mtime"]
