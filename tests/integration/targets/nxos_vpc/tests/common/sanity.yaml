- debug: msg="START connection={{ ansible_connection }} nxos_vpc sanity test"
- block:
  - set_fact: delay_restore_orphan_port=25
  - set_fact: def_delay_restore_orphan_port=default
  when: platform is not search("N35|N5K|N6K")
- block:
  - name: disable vpc for initial vpc config cleanup
    nxos_feature:
      feature: vpc
      state: disabled
  - name: enable feature vpc
    nxos_feature:
      feature: vpc
      state: enabled
  - name: Ensure ntc VRF exists on switch
    nxos_vrf:
      vrf: ntc
  - name: Configure vpc
    nxos_vpc: &id001
      state: present
      domain: 100
      pkl_dest: 192.168.100.4
      pkl_src: 10.1.100.20
      pkl_vrf: ntc
    register: result
  - assert: &id002
      that:
      - result.changed == true
  - name: Conf Idempotence
    nxos_vpc: *id001
    register: result
  - assert: &id004
      that:
      - result.changed == false
  - name: Configure vpc1
    nxos_vpc: &id003
      state: present
      domain: 100
      role_priority: 500
      system_priority: 2000
      peer_gw: true
      delay_restore: 5
      delay_restore_interface_vlan: 15
      delay_restore_orphan_port: '{{ delay_restore_orphan_port|default(omit) }}'
    register: result
  - assert: *id002
  - name: Conf Idempotence
    nxos_vpc: *id003
    register: result
  - assert: *id004
  - block:
    - set_fact: def_auto_recovery=False
    - set_fact: def_auto_recovery=True
      when: platform is ansible.community.search("N7K")
    - name: auto-recovery from default to non-default
      nxos_vpc: &id005
        domain: 100
        auto_recovery: '{{ not def_auto_recovery }}'
      register: result
    - assert: *id002
    - name: Conf Idempotence auto-recovery def-to-non-def
      nxos_vpc: *id005
      register: result
    - assert: *id004
    - name: auto-recovery from non-default to default
      nxos_vpc: &id006
        domain: 100
        auto_recovery: '{{ def_auto_recovery }}'
      register: result
    - assert: *id002
    - name: Conf Idempotence auto-recovery non-def-to-def
      nxos_vpc: *id006
      register: result
    - assert: *id004
    when: platform is ansible.community.search("N35|N7K|N3K-F|N9K-F")
  - name: Configure auto-recovery reload-delay
    nxos_vpc: &id007
      domain: 100
      auto_recovery_reload_delay: 242
    register: result
  - assert: *id002
  - name: Conf Idempotence auto-recovery reload-delay
    nxos_vpc: *id007
    register: result
  - assert: *id004
  - name: Configure vpc2
    nxos_vpc: &id008
      state: present
      domain: 100
      role_priority: default
      system_priority: default
      peer_gw: true
      delay_restore: default
      delay_restore_interface_vlan: default
      delay_restore_orphan_port: '{{ def_delay_restore_orphan_port|default(omit) }}'
    register: result
  - assert: *id002
  - name: Conf Idempotence
    nxos_vpc: *id008
    register: result
  - assert: *id004
  - name: Configure vpc3
    nxos_vpc: &id009
      state: present
      domain: 100
      peer_gw: false
    register: result
  - assert: *id002
  - name: Conf Idempotence
    nxos_vpc: *id009
    register: result
  - assert: *id004
  - name: remove vpc
    nxos_vpc: &id010
      state: absent
      domain: 100
    register: result
  - assert: *id002
  - name: Remove Idempotence
    nxos_vpc: *id010
    register: result
  - assert: *id004
  always:
  - name: remove vrf
    nxos_vrf:
      vrf: ntc
      state: absent
    ignore_errors: true
  - name: disable feature vpc
    nxos_feature:
      feature: vpc
      state: disabled
    ignore_errors: true
- debug: msg="END connection={{ ansible_connection }} nxos_vpc sanity test"
