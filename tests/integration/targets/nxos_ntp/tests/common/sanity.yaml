- debug: msg="START connection={{ ansible_connection }} nxos_ntp sanity test"
- name: Setup - Remove ntp if configured
  nxos_ntp: &id005
    server: 1.2.3.4
    key_id: 32
    prefer: disabled
    vrf_name: management
    source_addr: 192.0.2.5
    state: absent
  ignore_errors: true
- block:
  - name: Configure ntp
    nxos_ntp: &id001
      server: 1.2.3.4
      key_id: 32
      prefer: enabled
      vrf_name: management
      source_addr: 192.0.2.5
      state: present
    register: result
  - assert: &id002
      that:
      - result.changed == true
  - name: Idempotence Check
    nxos_ntp: *id001
    register: result
  - assert: &id004
      that:
      - result.changed == false
  - name: Configure ntp with some defaults
    nxos_ntp: &id003
      peer: 1.2.3.4
      key_id: default
      prefer: enabled
      vrf_name: default
      source_addr: default
      state: present
    register: result
  - assert: *id002
  - name: Idempotence Check
    nxos_ntp: *id003
    register: result
  - assert: *id004
  - name: Remove ntp config
    nxos_ntp: *id005
    register: result
  - assert: *id002
  - name: Remove Idempotence Check
    nxos_ntp: *id005
    register: result
  - assert: *id004
  - name: Configure ntp again
    nxos_ntp: &id006
      source_int: Ethernet1/3
      peer: 1.2.3.4
      prefer: enabled
      state: present
    register: result
  - assert: *id002
  - name: Idempotence Check
    nxos_ntp: *id006
    register: result
  - assert: *id004
  - name: Remove source interface
    nxos_ntp: &id007
      source_int: default
      state: present
    register: result
  - assert: *id002
  - name: Idempotence Check
    nxos_ntp: *id007
    register: result
  - assert: *id004
  - name: Remove ntp
    nxos_ntp: *id005
    register: result
  - assert: *id002
  - name: Remove Idempotence Check
    nxos_ntp: *id005
    register: result
  - assert: *id004
  always:
  - name: Remove ntp config
    nxos_ntp: *id005
  - debug: msg="END connection={{ ansible_connection }} nxos_ntp sanity test"
