- block:
  - debug: msg="START cli/nxapi_ssl.yaml"
  - name: Configure NXAPI HTTPs w/weak ciphers
    nxos_nxapi: &id001
      enable_https: true
      enable_sandbox: '{{nxapi_sandbox_option|default(omit)}}'
      ssl_strong_ciphers: false
    register: result
  - nxos_command:
      commands:
      - show run all | inc nxapi | inc ciphers
    register: result
  - name: Assert weak ciphers configuration
    assert:
      that:
      - result.stdout_lines[0][0] == 'nxapi ssl ciphers weak'
  - name: Configure NXAPI HTTP w/weak ciphers again
    nxos_nxapi: *id001
    register: result
  - name: Assert configuration is idempotent
    assert: &id003
      that:
      - result.changed == false
  - name: Configure NXAPI HTTPs w/strong ciphers
    nxos_nxapi: &id002
      enable_https: true
      enable_sandbox: '{{nxapi_sandbox_option|default(omit)}}'
      ssl_strong_ciphers: true
    register: result
  - nxos_command:
      commands:
      - show run all | inc nxapi | inc ciphers
    register: result
  - name: Assert strong ciphers configuration
    assert:
      that:
      - result.stdout_lines[0][0] == 'no nxapi ssl ciphers weak'
  - name: Configure NXAPI HTTPs w/strong ciphers again
    nxos_nxapi: *id002
    register: result
  - name: Assert configuration is idempotent
    assert: *id003
  - name: Configure NXAPI HTTPs w/default TLSv1
    nxos_nxapi: &id004
      enable_https: true
      enable_sandbox: '{{nxapi_sandbox_option|default(omit)}}'
    register: result
  - nxos_command:
      commands:
      - show run all | inc nxapi | inc protocols
    register: result
  - name: Assert NXAPI HTTPs w/default TLSv1 configuration
    assert:
      that:
      - result.stdout_lines[0][0] == 'nxapi ssl protocols TLSv1'
  - name: Configure NXAPI HTTPs w/default again
    nxos_nxapi: *id004
    register: result
  - name: Assert configuration is idempotent
    assert: *id003
  - name: Configure NXAPI HTTPs TLSv1.1 -default TLSv1
    nxos_nxapi: &id005
      enable_https: true
      enable_sandbox: '{{nxapi_sandbox_option|default(omit)}}'
      tlsv1_1: true
      tlsv1_0: false
    register: result
  - nxos_command:
      commands:
      - show run all | inc nxapi | inc protocols
    register: result
  - name: Assert NXAPI HTTPs w/TLSv1.1 configuration
    assert:
      that:
      - result.stdout_lines[0][0] == 'nxapi ssl protocols TLSv1.1'
  - name: Configure NXAPI HTTPs w/TLSv1.1 -default TLSv1 again
    nxos_nxapi: *id005
    register: result
  - name: Assert configuration is idempotent
    assert: *id003
  - name: Configure NXAPI HTTPs TLSv1.2 -default TLSv1
    nxos_nxapi: &id006
      enable_https: true
      enable_sandbox: '{{nxapi_sandbox_option|default(omit)}}'
      tlsv1_2: true
      tlsv1_0: false
    register: result
  - nxos_command:
      commands:
      - show run all | inc nxapi | inc protocols
    register: result
  - name: Assert NXAPI HTTPs w/TLSv1.2 configuration
    assert:
      that:
      - result.stdout_lines[0][0] == 'nxapi ssl protocols TLSv1.2'
  - name: Configure NXAPI HTTPs w/TLSv1.2 -default TLSv1 again
    nxos_nxapi: *id006
    register: result
  - name: Assert configuration is idempotent
    assert: *id003
  - name: Configure NXAPI HTTPs w/TLS1.2 +default TLSv1
    nxos_nxapi: &id007
      enable_https: true
      enable_sandbox: '{{nxapi_sandbox_option|default(omit)}}'
      ssl_strong_ciphers: true
      tlsv1_2: true
    register: result
  - nxos_command:
      commands:
      - show run all | inc nxapi | inc protocols
    register: result
  - name: Assert NXAPI HTTPs w/TLS1.2 +default TLSv1 configuration
    assert:
      that:
      - result.stdout_lines[0][0] == 'nxapi ssl protocols TLSv1 TLSv1.2'
  - name: Configure NXAPI HTTPs w/TLS1.2 again
    nxos_nxapi: *id007
    register: result
  - name: Assert configuration is idempotent
    assert: *id003
  - name: Configure NXAPI HTTPs w/TLS1.2 TLS1.1 -default TLSv1
    nxos_nxapi: &id008
      enable_https: true
      enable_sandbox: '{{nxapi_sandbox_option|default(omit)}}'
      ssl_strong_ciphers: true
      tlsv1_0: false
      tlsv1_1: true
      tlsv1_2: true
    register: result
  - nxos_command:
      commands:
      - show run all | inc nxapi | inc protocols
    register: result
  - name: Assert NXAPI HTTPs w/TLS1.2 TLS1.2 -default TLSv1 configuration
    assert:
      that:
      - result.stdout_lines[0][0] == 'nxapi ssl protocols TLSv1.1 TLSv1.2'
  - name: Configure NXAPI HTTPs w/TLS1.2 TLS1.1 -default TLSv1 again
    nxos_nxapi: *id008
    register: result
  - name: Assert configuration is idempotent
    assert: *id003
  - name: Configure NXAPI HTTPs w/TLS1.2 TLS1.1 +default TLSv1
    nxos_nxapi: &id009
      enable_https: true
      enable_sandbox: '{{nxapi_sandbox_option|default(omit)}}'
      ssl_strong_ciphers: true
      tlsv1_1: true
      tlsv1_2: true
    register: result
  - nxos_command:
      commands:
      - show run all | inc nxapi | inc protocols
    register: result
  - name: Assert NXAPI HTTPs w/TLS1.2 TLS1.1 +default TLSv1 configuration
    assert:
      that:
      - result.stdout_lines[0][0] == 'nxapi ssl protocols TLSv1 TLSv1.1 TLSv1.2'
  - name: Configure NXAPI HTTPs w/TLS1.2 TLS1.1 +default TLSv1 again
    nxos_nxapi: *id009
    register: result
  - name: Assert configuration is idempotent
    assert: *id003
  - name: Configure NXAPI HTTPs with explicit TLS1.2 TLS1.1 TLSv1
    nxos_nxapi: &id010
      enable_https: true
      enable_sandbox: '{{nxapi_sandbox_option|default(omit)}}'
      ssl_strong_ciphers: true
      tlsv1_0: true
      tlsv1_1: true
      tlsv1_2: true
    register: result
  - nxos_command:
      commands:
      - show run all | inc nxapi | inc protocols
    register: result
  - name: Assert NXAPI HTTPs w/TLS1.2 TLS1.2 TLSv1 configuration
    assert:
      that:
      - result.stdout_lines[0][0] == 'nxapi ssl protocols TLSv1 TLSv1.1 TLSv1.2'
  - name: Configure NXAPI HTTPs w/TLS1.2 TLS1.1 TLSv1 again
    nxos_nxapi: *id010
    register: result
  - name: Assert configuration is idempotent
    assert: *id003
  always:
  - name: Cleanup - Disable NXAPI
    nxos_nxapi:
      state: absent
    register: result
  - name: Cleanup - Re-enable NXAPI
    nxos_nxapi:
      state: present
    register: result
  - debug: msg="END cli/nxapi_ssl.yaml"
  when: (platform is ansible.community.match("N9K") or platform is ansible.community.match("N3K")
    or platform is ansible.community.match("N9K-F") or platform is ansible.community.match("N35")
    or platform is ansible.community.match("N3L")) and major_ansible.community.version
    is ansible.community.version('9.2', '>=')
