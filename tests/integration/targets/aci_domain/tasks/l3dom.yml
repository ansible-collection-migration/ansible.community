- name: Remove L3 domain
  aci_domain: &id003
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    domain: l3_dom
    domain_type: l3dom
    state: absent
- name: Add L3 domain (check_mode)
  aci_domain: &id001
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    domain: l3_dom
    domain_type: l3dom
    state: present
  check_mode: true
  register: cm_add_domain
- name: Add L3 domain (normal mode)
  aci_domain: *id001
  register: nm_add_domain
- name: Verify add_domain
  assert:
    that:
    - cm_add_domain is changed
    - nm_add_domain is changed
    - 'cm_add_domain.sent == nm_add_domain.sent == {"l3extDomP": {"attributes": {"name":
      "l3_dom"}}}'
    - 'cm_add_domain.proposed == nm_add_domain.proposed == {"l3extDomP": {"attributes":
      {"name": "l3_dom"}}}'
    - cm_add_domain.current == cm_add_domain.previous == nm_add_domain.previous ==
      []
    - 'nm_add_domain.current == [{"l3extDomP": {"attributes": {"dn": "uni/l3dom-l3_dom",
      "name": "l3_dom", "nameAlias": "", "ownerKey": "", "ownerTag": ""}}}]'
- name: Add L3 domain again (check_mode)
  aci_domain: *id001
  check_mode: true
  register: cm_add_domain_again
- name: Add L3 domain again (normal mode)
  aci_domain: *id001
  register: nm_add_domain_again
- name: Verify add_domain_again
  assert:
    that:
    - cm_add_domain_again is not changed
    - nm_add_domain_again is not changed
- name: Query all L3 domains (check_mode)
  aci_domain: &id002
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    domain_type: l3dom
    state: query
  check_mode: true
  register: cm_query_all_domains
- name: Query all L3 domains (normal mode)
  aci_domain: *id002
  register: nm_query_all_domains
- name: Verify query_all_domains
  assert:
    that:
    - cm_query_all_domains is not changed
    - nm_query_all_domains is not changed
    - cm_query_all_domains == nm_query_all_domains
    - nm_query_all_domains.current|length >= 1
- name: Query our L3 domain (check_mode)
  aci_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    domain_type: l3dom
    state: query
    domain: l3_dom
  check_mode: true
  register: cm_query_domain
- name: Query our L3 domain (normal mode)
  aci_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    domain_type: l3dom
    state: query
    domain: l3_dom
  register: nm_query_domain
- name: Verify query_domain
  assert:
    that:
    - cm_query_domain is not changed
    - nm_query_domain is not changed
    - cm_query_domain == nm_query_domain
    - nm_query_domain.current.0.l3extDomP.attributes.dn == 'uni/l3dom-l3_dom'
    - nm_query_domain.current.0.l3extDomP.attributes.name == 'l3_dom'
- name: Remove L3 domain (check_mode)
  aci_domain: *id003
  check_mode: true
  register: cm_remove_domain
- name: Remove L3 domain (normal mode)
  aci_domain: *id003
  register: nm_remove_domain
- name: Verify remove_domain
  assert:
    that:
    - cm_remove_domain is changed
    - nm_remove_domain is changed
    - 'cm_remove_domain.current == cm_remove_domain.previous == nm_remove_domain.previous
      == [{"l3extDomP": {"attributes": {"dn": "uni/l3dom-l3_dom", "name": "l3_dom",
      "nameAlias": "", "ownerKey": "", "ownerTag": ""}}}]'
    - nm_remove_domain.current == []
- name: Remove L3 domain again (check_mode)
  aci_domain: *id003
  check_mode: true
  register: cm_remove_domain_again
- name: Remove L3 domain again (normal mode)
  aci_domain: *id003
  register: nm_remove_domain_again
- name: Verify remove_domain_again
  assert:
    that:
    - cm_remove_domain_again is not changed
    - nm_remove_domain_again is not changed
- name: Query non-existing L3 domain (check_mode)
  aci_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    domain_type: l3dom
    state: query
    domain: l3_dom
  check_mode: true
  register: cm_query_non_domain
- name: Query non-existing L3 domain (normal mode)
  aci_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    domain_type: l3dom
    state: query
    domain: l3_dom
  register: nm_query_non_domain
- name: Verify query_non_domain
  assert:
    that:
    - cm_query_non_domain is not changed
    - nm_query_non_domain is not changed
    - cm_query_non_domain == nm_query_non_domain
    - nm_query_non_domain.current == []
