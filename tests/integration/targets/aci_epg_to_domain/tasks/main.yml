- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password
    is not defined
- name: ensure tenant exists for tests to kick off
  aci_tenant:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: present
  register: tenant_present
- name: ensure ap exists for tests to kick off
  aci_ap:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: present
    ap: anstest
  register: ap_present
- name: ensure epg exists for tests to kick off
  aci_epg:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: present
    ap: anstest
    epg: anstest
  register: epg_present
- name: ensure phys domain exists for tests to kick off
  aci_rest:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    method: post
    path: api/mo/uni/phys-anstest.json
    content: &id002
      physDomP:
        attributes: {}
  register: phys_domain_post
- name: ensure vmm domain exists for tests to kick off
  aci_rest:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    method: post
    path: api/mo/uni/vmmp-VMware/dom-anstest.json
    content: &id001
      vmmDomP:
        attributes: {}
  register: vmm_domain_post
- name: bind phys domain to epg - check mode works
  aci_epg_to_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: present
    ap: anstest
    epg: anstest
    domain: anstest
    domain_type: phys
  check_mode: true
  register: phys_check_mode_present
- name: bind phys domain to epg - creation works
  aci_epg_to_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: present
    ap: anstest
    epg: anstest
    domain: anstest
    domain_type: phys
  register: phys_present
- name: bind phys domain to epg - idempotency works
  aci_epg_to_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: present
    ap: anstest
    epg: anstest
    domain: anstest
    domain_type: phys
  register: phys_idempotent
- name: bind phys domain to epg - update works
  aci_epg_to_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: present
    ap: anstest
    epg: anstest
    domain: anstest
    domain_type: phys
    deploy_immediacy: immediate
  register: phys_update
- name: bind vmm domain to epg - creation works
  aci_epg_to_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: present
    ap: anstest
    epg: anstest
    domain: anstest
    domain_type: vmm
    vm_provider: vmware
    resolution_immediacy: pre-provision
  register: vmm_present
- name: bind vmm domain to epg - missing params
  aci_epg_to_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: present
    ap: anstest
    epg: anstest
    domain: anstest
    domain_type: vmm
    vm_provider: '{{ fake_var | default(omit) }}'
    resolution_immediacy: pre-provision
  ignore_errors: true
  register: present_missing_params
- name: bind vmm domain to epg - invalid vlan
  aci_epg_to_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: present
    ap: anstest
    epg: anstest
    domain: anstest
    domain_type: phys
    encap: 4097
  ignore_errors: true
  register: invalid_vlan
- name: bind vmm domain to epg - incompatible params
  aci_epg_to_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: present
    ap: anstest
    epg: anstest
    domain: anstest
    domain_type: phys
    vm_provider: vmware
  ignore_errors: true
  register: incompatible_params
- name: present assertions
  assert:
    that:
    - phys_check_mode_present is changed
    - phys_present is changed
    - phys_present.previous == []
    - 'phys_present.sent == {"fvRsDomAtt": {"attributes": {}}}'
    - '"[uni/phys-anstest].json" in phys_present.url'
    - phys_idempotent is not changed
    - phys_idempotent.sent == {}
    - phys_update is changed
    - 'phys_update.sent == {"fvRsDomAtt": {"attributes": {"instrImedcy": "immediate"}}}'
    - vmm_present is changed
    - 'vmm_present.sent == {"fvRsDomAtt": {"attributes": {"resImedcy": "pre-provision"}}}'
    - '"[uni/vmmp-VMware/dom-anstest].json" in vmm_present.url'
    - present_missing_params is failed
    - 'present_missing_params.msg == "domain_type is vmm but all of the following
      are missing: vm_provider"'
    - invalid_vlan is failed
    - invalid_vlan.msg == "Valid VLAN assigments are from 1 to 4096"
    - incompatible_params is failed
    - incompatible_params.msg == "Domain type 'phys' cannot have a 'vm_provider'"
- name: get domain epg binding
  aci_epg_to_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: '{{ fake_var | default(omit) }}'
    state: query
  register: binding_query
- name: query assertions
  assert:
    that:
    - binding_query is not changed
    - binding_query.current | length > 1
    - '"class/fvRsDomAtt.json" in binding_query.url'
- name: delete domain epg binding - check mode
  aci_epg_to_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: absent
    ap: anstest
    epg: anstest
    domain: anstest
    domain_type: phys
  check_mode: true
  register: epg_domain_check_mode_absent
- name: delete phys domain epg binding - delete works
  aci_epg_to_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: absent
    ap: anstest
    epg: anstest
    domain: anstest
    domain_type: phys
  register: epg_domain_absent
- name: delete vmm domain epg binding - delete works
  aci_epg_to_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: absent
    ap: anstest
    epg: anstest
    domain: anstest
    domain_type: vmm
    vm_provider: vmware
    resolution_immediacy: pre-provision
  register: epg_vmm_domain_absent
- name: delete domain epg binding - idempotency works
  aci_epg_to_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: absent
    ap: anstest
    epg: anstest
    domain: anstest
    domain_type: phys
  register: idempotency_absent
- name: delete domain epg binding - missing param
  aci_epg_to_domain:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: absent
  ignore_errors: true
  register: absent_missing_param
- name: absent assertions
  assert:
    that:
    - epg_domain_check_mode_absent is changed
    - epg_domain_check_mode_absent.previous != []
    - epg_domain_absent is changed
    - epg_domain_absent.previous == epg_domain_check_mode_absent.previous
    - epg_vmm_domain_absent is changed
    - idempotency_absent is not changed
    - idempotency_absent.previous == []
    - absent_missing_param is failed
    - 'absent_missing_param.msg == "state is absent but all of the following are missing:
      ap, domain, domain_type, epg"'
- name: remove vmm domain - cleanup
  aci_rest:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    method: delete
    path: api/mo/uni/vmmp-VMware/dom-anstest.json
    content: *id001
  when: vmm_domain_post is ansible.community.changed
- name: remove phys domain - cleanup
  aci_rest:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: '{{ aci_output_level | default("info") }}'
    method: delete
    path: api/mo/uni/phys-anstest.json
    content: *id002
  when: phys_domain_post is ansible.community.changed
- name: remove epg - cleanup
  aci_epg:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: absent
    ap: anstest
    epg: anstest
  when: epg_present is ansible.community.changed
- name: remove ap - cleanup
  aci_ap:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: absent
    ap: anstest
  when: ap_present is ansible.community.changed
- name: remove tenant - cleanup
  aci_tenant:
    host: '{{ aci_hostname }}'
    username: '{{ aci_username }}'
    password: '{{ aci_password }}'
    validate_certs: '{{ aci_validate_certs | default(false) }}'
    use_ssl: '{{ aci_use_ssl | default(true) }}'
    use_proxy: '{{ aci_use_proxy | default(true) }}'
    output_level: debug
    tenant: anstest
    state: absent
  when: tenant_present is ansible.community.changed
